trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # provides pulumi access token + aws creds to runner env
  - group: cloud-secrets
  - name: YARN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.yarn
  # set for react-scripts test runner
  - name: CI
    value: true

stages:
  # Validation stage
  # Always runs first
  # Can run multiple validations (unit test, acceptance, linting) in parallel
- stage: Validation
  jobs:
    - job: ClientUnitTests
      steps:
      - task: Cache@2
        inputs:
          key: 'client | yarn | "$(Agent.OS)" | yarn.lock'
          path: $(YARN_CACHE_FOLDER)
        displayName: Cache Yarn packages

      - script: yarn install
        displayName: 'Install dependencies'

      - script: yarn test
        displayName: 'Client Unit Tests'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: JUnit
          testResultsFiles: junit.xml

      - task: PublishCodeCoverageResults@1
        condition: succeededOrFailed()
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml

    - job: PulumiValidation
      steps:
      - script: echo "TODO"
        displayName: 'Validate Pulumi code'

  # Pipeline publish stages
  # Depend on success of previous stage execution
  # Could be templated out
- stage: PublishDev
  variables:
    artifactName: 'Development-$(Build.SourceVersion)' # append the git hash to the artifact name
    environment: development
  jobs:
    - template: build-and-deploy.template.yml

    - job: PostDeploy
      dependsOn:
        - Deploy
      steps:
      - script: echo "TODO"
        displayName: 'Some great regression tests'

- stage: PublishQA
  variables:
    artifactName: 'QA-$(Build.SourceVersion)' # append the git hash to the artifact name
    environment: qa
  jobs:
    - template: build-and-deploy.template.yml

    - job: PostDeploy
      dependsOn:
        - Deploy
      steps:
      - script: echo "TODO"
        displayName: 'Some great integration tests'
